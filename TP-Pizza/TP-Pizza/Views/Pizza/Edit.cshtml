@model TP_Pizza.Models.ViewModels.PizzaVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Pizza</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Pizza.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Pizza.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pizza.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Pizza.Nom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Pizza.Pate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SelectedPate, Model.pates.Select(m => new SelectListItem { Value = m.Id.ToString(), Text = m.Nom }))
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pizza.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.SelectedIngrdients, Model.ingredients.Select(m => new SelectListItem { Value = m.Id.ToString(), Text = m.Nom }))
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    <a href="@Url.Action(TP_Pizza.Utils.Constants.VIEW_INDEX, "Pizza")" class="btn-primary">Back to list</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
